package health

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/danisla/esio/models"
)

/*GetHealthzOK API and Elasticsearch server are healthy.

swagger:response getHealthzOK
*/
type GetHealthzOK struct {

	// In: body
	Payload *models.Healthz `json:"body,omitempty"`
}

// NewGetHealthzOK creates GetHealthzOK with default headers values
func NewGetHealthzOK() *GetHealthzOK {
	return &GetHealthzOK{}
}

// WithPayload adds the payload to the get healthz o k response
func (o *GetHealthzOK) WithPayload(payload *models.Healthz) *GetHealthzOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get healthz o k response
func (o *GetHealthzOK) SetPayload(payload *models.Healthz) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHealthzOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*GetHealthzDefault API or Elasticsearch server are not healthy.

swagger:response getHealthzDefault
*/
type GetHealthzDefault struct {
	_statusCode int

	// In: body
	Payload *models.Healthz `json:"body,omitempty"`
}

// NewGetHealthzDefault creates GetHealthzDefault with default headers values
func NewGetHealthzDefault(code int) *GetHealthzDefault {
	if code <= 0 {
		code = 500
	}

	return &GetHealthzDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the get healthz default response
func (o *GetHealthzDefault) WithStatusCode(code int) *GetHealthzDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the get healthz default response
func (o *GetHealthzDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the get healthz default response
func (o *GetHealthzDefault) WithPayload(payload *models.Healthz) *GetHealthzDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get healthz default response
func (o *GetHealthzDefault) SetPayload(payload *models.Healthz) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetHealthzDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		if err := producer.Produce(rw, o.Payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
