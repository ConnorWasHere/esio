package index

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	middleware "github.com/go-openapi/runtime/middleware"
)

// DeleteStartEndHandlerFunc turns a function with the right signature into a delete start end handler
type DeleteStartEndHandlerFunc func(DeleteStartEndParams) middleware.Responder

// Handle executing the request and returning a response
func (fn DeleteStartEndHandlerFunc) Handle(params DeleteStartEndParams) middleware.Responder {
	return fn(params)
}

// DeleteStartEndHandler interface for that can handle valid delete start end params
type DeleteStartEndHandler interface {
	Handle(DeleteStartEndParams) middleware.Responder
}

// NewDeleteStartEnd creates a new http.Handler for the delete start end operation
func NewDeleteStartEnd(ctx *middleware.Context, handler DeleteStartEndHandler) *DeleteStartEnd {
	return &DeleteStartEnd{Context: ctx, Handler: handler}
}

/*DeleteStartEnd swagger:route DELETE /{start}/{end} index deleteStartEnd

DeleteStartEnd delete start end API

*/
type DeleteStartEnd struct {
	Context *middleware.Context
	Handler DeleteStartEndHandler
}

func (o *DeleteStartEnd) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, _ := o.Context.RouteInfo(r)
	var Params = NewDeleteStartEndParams()

	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request

	o.Context.Respond(rw, r, route.Produces, route, res)

}
