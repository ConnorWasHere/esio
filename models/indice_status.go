package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/go-openapi/errors"
)

// IndiceStatus indice status
// swagger:model indice_status
type IndiceStatus struct {

	// List of indices that are available not but being restored.
	Pending []string `json:"pending"`

	// List of indices restored and are ready for query.
	Ready []string `json:"ready"`

	// List of indices being resotred.
	Restoring []string `json:"restoring"`
}

// Validate validates this indice status
func (m *IndiceStatus) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePending(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateReady(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRestoring(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *IndiceStatus) validatePending(formats strfmt.Registry) error {

	if swag.IsZero(m.Pending) { // not required
		return nil
	}

	return nil
}

func (m *IndiceStatus) validateReady(formats strfmt.Registry) error {

	if swag.IsZero(m.Ready) { // not required
		return nil
	}

	return nil
}

func (m *IndiceStatus) validateRestoring(formats strfmt.Registry) error {

	if swag.IsZero(m.Restoring) { // not required
		return nil
	}

	return nil
}
